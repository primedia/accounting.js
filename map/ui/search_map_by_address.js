// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  define(['flight/lib/component', 'utils'], function(defineComponent, utils) {
    var searchMapByAddress;
    searchMapByAddress = function() {
      this.defaultAttrs({
        icon: utils.assetURL() + "/images/nonsprite/map/map_pin_custom.png",
        addressSearchInputSel: '#searchTextField',
        addressSearchErrorSel: '#address_search_error',
        addressSearchBar: '#address_search',
        addressSearchLink: '#link_show_address_field'
      });
      this.initSearchMarker = function() {
        var autocomplete, input;
        input = this.$node.select(this.attr.addressSearchInputSel)[0];
        autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', this.attr.gMap);
        autocomplete.setTypes([]);
        this.handleAddressTextChange();
        this.toggleAddressFieldDisplay();
      };
      this.handleAddressTextChange = function() {
        var searchError, searchInput,
          _this = this;
        searchInput = this.$node.select(this.attr.addressSearchInputSel);
        searchError = this.$node.select(this.attr.addressSearchErrorSel);
        return searchInput.keyup(function(e) {
          if (searchErrorSel.is(':visible') && e.keyCode !== 13) {
            return _this.addrSearchError.slideUp();
          }
        });
      };
      this.toggleAddressFieldDisplay = function() {
        var searchBar, searchLink,
          _this = this;
        searchBar = this.$node.select(this.attr.addressSearchBar);
        searchLink = this.$node.select(this.attr.addressSearchLink);
        return searchLink.click(function() {
          if (searchBar.is(":visible")) {
            searchBar.hide(100);
            return searchLink.text("Add an address");
          } else {
            searchBar.show(100);
            _this.$node.select(_this.attr.addressSearchInputSel).focus();
            return searchLink.text("Hide address bar");
          }
        });
      };
      return this.after('initialize', function() {
        return this.on(document, 'mapRenderedFirst', this.initSearchMarker);
      });
    };
    return defineComponent(searchMapByAddress);
  });

}).call(this);
